name: SAP_Raid_Updater

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

env:
  CF_API_KEY: ${{ secrets.CURSEFORGE_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Update Version and Process Changelog
        id: update_version_and_changelog
        run: |
          set -e

          TAG_NAME=${GITHUB_REF#refs/tags/}
          CLEAN_TAG=$(echo "$TAG_NAME" | sed 's/^1\.0\.//')
          CURRENT_DATE=$(date +"%Y-%m-%d")

          # Update .toc version
          sed -i "s/## Version: .*/## Version: $CLEAN_TAG/" SAP_Raid_Updater.toc
          echo "Updated TOC version to $CLEAN_TAG"

          # Get commit log
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "$TAG_NAME" | head -n 1 || true)
          COMMIT_LOG=$(git log "${PREV_TAG:+$PREV_TAG..}$TAG_NAME" --pretty=format:"- %s" | grep '\[sap\]' | grep -v '\[skip ci\]' || true)

          echo "commit_log<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ -z "$COMMIT_LOG" ]; then
            echo "No relevant commits found."
            echo "has_changelog=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Write changelog
          {
            echo "## $TAG_NAME ($CURRENT_DATE)"
            echo "$COMMIT_LOG" | sed 's/\[sap\]//g'
            echo
            [ -f CHANGELOG.md ] && cat CHANGELOG.md
            echo "[$TAG_NAME ZIP](https://github.com/mikeekert/SAP_Raid/releases/download/$TAG_NAME/SAP_Raid_Updater-v$TAG_NAME.zip)"
          } > CHANGELOG.md.new
          mv CHANGELOG.md.new CHANGELOG.md
          
          # Prepare JSON for Discord
          VERSION_LINE="## $TAG_NAME ($CURRENT_DATE)"
          CHANGELOG_TEXT=$(echo "$COMMIT_LOG" | sed 's/\[sap\]//g' | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
          DOWNLOAD_LINK="[Download v$TAG_NAME](https://github.com/mikeekert/SAP_Raid/releases/download/$TAG_NAME/SAP_Raid_Updater-v$TAG_NAME.zip)"

          EMBEDS='[
            {
              "title": "New Version Deployed",
              "description": "**'"$VERSION_LINE"'**\n\nüìù Changelog:\n'"$CHANGELOG_TEXT"'\n\nüì• '"$DOWNLOAD_LINK"'",
              "color": 1127128
            }
          ]'

          echo "embeds<<EOF" >> $GITHUB_OUTPUT
          echo "$EMBEDS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "has_changelog=true" >> $GITHUB_OUTPUT

      - name: Prepare Addon Folder
        run: |
          mkdir -p package/SAP_Raid_Updater
          shopt -s extglob
          cp -r !(package|.git|.github) package/SAP_Raid_Updater/

      - name: Create ZIP with tag suffix
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          cd package
          zip -qr SAP_Raid_Updater-v${TAG_NAME}.zip SAP_Raid_Updater/ \
            --exclude "SAP_Raid_Updater/.github/*" \
                      "SAP_Raid_Updater/scripts/*" \
                      "SAP_Raid_Updater/WeakAuras/*" \
                      "SAP_Raid_Updater/.gitignore" \
                      "SAP_Raid_Updater/.idea/*"
          echo "ZIP_NAME=SAP_Raid_Updater-v${TAG_NAME}.zip" >> $GITHUB_ENV

      - name: Upload Release Asset
        if: ${{ success() }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: package/${{ env.ZIP_NAME }}
          draft: false
          body: |
            This release was automatically generated from tag `${{ github.ref_name }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Discord Notification
        if: false #if: ${{ steps.update_version_and_changelog.outputs.has_changelog == 'true' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 'SAP Raid Updater'
          DISCORD_AVATAR: 'https://i.imgur.com/kJ98eyt.png'
          DISCORD_EMBEDS: ${{ steps.update_version_and_changelog.outputs.embeds }}
        with:
          args: ''

      - name: Commit updated files
        if: ${{ success() }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add SAP_Raid_Updater.toc

          if [[ "${{ steps.update_version_and_changelog.outputs.has_changelog }}" == "true" ]]; then
            git add CHANGELOG.md
            git commit -m "Update version to ${GITHUB_REF#refs/tags/} and update changelog [skip ci]"
          else
            git commit -m "Update version to ${GITHUB_REF#refs/tags/} [skip ci]"
          fi

          git push --force origin HEAD:master
      - name: Clone project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Package and release
        uses: BigWigsMods/packager@v2